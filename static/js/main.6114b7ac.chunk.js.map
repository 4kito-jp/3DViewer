{"version":3,"sources":["Viewer.js","BottomNav.js","TopNav.js","App.js","serviceWorker.js","index.js"],"names":["Viewer","renderer","scene","camera","mesh","API","lightProbeIntensity","directionalLightIntensity","diffuse","emissiveIntensity","envMapIntensity","specular","reflectivity","shininess","myWidth","window","innerWidth","myHeight","innerHeight","THREE","antialias","setPixelRatio","devicePixelRatio","setSize","gammaInput","gammaOutput","gammaFactor","position","set","controls","OrbitControls","domElement","addEventListener","render","minDistance","maxDistance","enablePan","lightProbe","add","dirLight","directionalLight","push","i","length","prefix","postfix","urls","process","load","cubeTexture","encoding","copy","LightProbeGenerator","fromCubeTexture","STLLoader","geometry","material","color","emissive","envMap","scale","this","mount","appendChild","animate","requestAnimationFrame","ref","Component","DotsMobileStepper","theme","useTheme","React","useState","activeStep","setActiveStep","MobileStepper","variant","steps","nextButton","Button","onClick","prevActiveStep","disabled","direction","backButton","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","TopNav","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6114b7ac.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { LightProbeGenerator } from 'three/examples/jsm/lights/LightProbeGenerator.js';\r\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader.js';\r\n\r\nclass Viewer extends Component {\r\n  componentDidMount() {\r\n\r\n    let API = {\r\n      lightProbeIntensity: 1.0,\r\n      directionalLightIntensity: 1.0,\r\n      diffuse: 0x2f1105,\r\n      emissiveIntensity: 0.0,\r\n      envMapIntensity: 16/100,\r\n      specular : 0x311607,\r\n      reflectivity: 16/100,\r\n      shininess: 35,\r\n    };\r\n\r\n    let myWidth = window.innerWidth,\r\n      myHeight = window.innerHeight - 60 * 2;\r\n\r\n    let renderer, scene, camera, mesh;\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    renderer.setSize( myWidth, myHeight );\r\n    renderer.gammaInput = true;\r\n    renderer.gammaOutput = true;\r\n    renderer.gammaFactor = 2.2;\r\n\r\n    scene = new THREE.Scene();\r\n\r\n    camera = new THREE.PerspectiveCamera(40, myWidth / myHeight, 1, 1000);\r\n    camera.position.set( 0, 0, 25 );\r\n\r\n    let render = () => {\r\n\t\t\trenderer.render( scene, camera );\r\n    }\r\n\r\n    let controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.addEventListener( 'change', render );\r\n    controls.minDistance = 10;\r\n    controls.maxDistance = 50;\r\n    controls.enablePan = false;\r\n\r\n    // probe\r\n    let lightProbe = new THREE.LightProbe();\r\n    scene.add( lightProbe );\r\n\r\n    // light\r\n    let directionalLight = [];\r\n    let dirLight;\r\n    dirLight = new THREE.DirectionalLight( 0xffffff, API.directionalLightIntensity );\r\n    dirLight.position.set( -10, 10, 10 );\r\n    directionalLight.push(dirLight);\r\n\r\n    dirLight = new THREE.DirectionalLight( 0xffffff, API.directionalLightIntensity );\r\n    dirLight.position.set(  10, 10, -10 );\r\n    directionalLight.push(dirLight);\r\n\r\n    for (var i = 0; i < directionalLight.length; i++) {\r\n      scene.add( directionalLight[i] );\r\n    }\r\n\r\n    // envmap\r\n    var genCubeUrls = function ( prefix, postfix ) {\r\n      return [\r\n        prefix + 'posx' + postfix, prefix + 'negx' + postfix,\r\n        prefix + 'posy' + postfix, prefix + 'negy' + postfix,\r\n        prefix + 'posz' + postfix, prefix + 'negz' + postfix\r\n      ];\r\n    };\r\n\r\n    var urls = genCubeUrls(\r\n      process.env.PUBLIC_URL + '/assets/models/kaen-doki/env/',\r\n      '.jpg'\r\n    );\r\n\r\n    let envMapLoaded = (cubeTexture) => {\r\n      cubeTexture.encoding = THREE.sRGBEncoding;\r\n      lightProbe.copy( LightProbeGenerator.fromCubeTexture( cubeTexture ) );\r\n\r\n      // 3Dモデルのロード\r\n      var loader = new STLLoader();\r\n      loader.load( process.env.PUBLIC_URL + '/assets/models/kaen-doki/geo/kaendoki_model.stl', function ( geometry ) {\r\n        var material = new THREE.MeshPhongMaterial({\r\n            color: API.diffuse,\r\n            emissive: API.emissive,\r\n            emissiveIntensity: API.emissiveIntensity,\r\n            envMap: cubeTexture,\r\n            reflectivity: API.envMapIntensity,\r\n            shininess : API.shininess,\r\n            specular: API.specular,\r\n        });\r\n        mesh = new THREE.Mesh( geometry, material );\r\n        mesh.scale.set(40,40,40);\r\n        scene.add( mesh );\r\n      } );\r\n    }\r\n\r\n    new THREE.CubeTextureLoader().load( urls, envMapLoaded );\r\n\r\n    this.mount.appendChild(renderer.domElement);\r\n    var animate = function () {\r\n      requestAnimationFrame( animate );\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={ref=> (this.mount = ref)} />\r\n    )\r\n  }}\r\n\r\nexport default Viewer\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nexport default function DotsMobileStepper() {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={3}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      nextButton={\r\n        <Button onClick={handleNext} disabled={activeStep === 2}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function TopNav() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Viewer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport './App.css';\r\n\r\nimport Viewer from \"./Viewer\"\r\nimport BottomNav from \"./BottomNav\"\r\nimport TopNav from \"./TopNav\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopNav />\r\n        <Viewer />\r\n        <BottomNav />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}